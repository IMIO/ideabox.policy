[buildout]
extends = 
    http://dist.plone.org/release/5.2-latest/versions.cfg
    https://raw.githubusercontent.com/IMIO/buildout.ideabox/main/versions-base.cfg
    https://raw.githubusercontent.com/collective/buildout.plonetest/master/qa.cfg

show-picked-versions = true
extensions =
    mr.developer

parts =
    instance
    test
    code-analysis
    createcoverage
    releaser
    i18ndude
    omelette
    robot
    test-coverage
develop = .


[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
environment-vars =
    zope_i18n_compile_mo_files true
eggs =
    Plone
    Pillow
    plone.app.mosaic
    ideabox.diazotheme.spirit
    ideabox.policy [test]


[code-analysis]
recipe = plone.recipe.codeanalysis[recommended]
directory = ${buildout:directory}/src/ideabox
flake8-exclude = bootstrap.py,bootstrap-buildout.py,docs,*.egg.,omelette
flake8-max-complexity = 15
return-status-codes = False
flake8-ignore = Q000,E501,C812,P001,P002,B901,E722,S001,W503


[createcoverage]
recipe = zc.recipe.egg
eggs = createcoverage


[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}


[test]
recipe = zc.recipe.testrunner
eggs = ${instance:eggs}
defaults = ['-s', 'ideabox.policy', '--auto-color', '--auto-progress']
environment = testenv


[testenv]
zope_i18n_compile_mo_files = true


[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework[debug,reload]


[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser


[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[sources]
ideabox.diazotheme.spirit = git git@github.com:IMIO/ideabox.diazotheme.spirit.git

[versions]
# Don't use a released version of ideabox.policy
ideabox.policy =
Products.BeakerSessionDataManager = 2.1

# override some version pinning from Plone:
collective.z3cform.select2 = 3.0.0b2

[test-coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/bash
    export TZ=UTC
    ${buildout:directory}/bin/coverage run bin/test $*
    ${buildout:directory}/bin/coverage html
    ${buildout:directory}/bin/coverage report -m --fail-under=90
    # Fail (exit status 1) if coverage returns exit status 2 (this happens
    # when test coverage is below 100%.
output = ${buildout:directory}/bin/test-coverage
mode = 755
